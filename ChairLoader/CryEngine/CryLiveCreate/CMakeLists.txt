set(THIS_PROJECT CryLiveCreate)

project( ${THIS_PROJECT} )

#START-FILE-LIST
# File List auto generated by waf2cmake.py, do not modify manually.

set (SourceGroup_Root
	CryLiveCreate.cpp
	CryLiveCreate.h
	LiveCreateCommands.h
	StdAfx.cpp
	StdAfx.h
)


set (SourceGroup_Source
	../CrySystem/NullImplementation/NullLiveCreate.h
	LiveCreateHost.cpp
	LiveCreateHost.h
	LiveCreateManager.cpp
	LiveCreateManager.h
	LiveCreateNativeFile.cpp
	LiveCreateNativeFile.h
)
source_group("Source" FILES ${SourceGroup_Source})


set (SourceGroup_Source_Commands
	LiveCreate_Objects.cpp
	LiveCreate_Objects.h
	LiveCreate_System.cpp
	LiveCreate_System.h
)
source_group("Source\\Commands" FILES ${SourceGroup_Source_Commands})


set (SourceGroup_Source_Platforms
	PlatformHandler_Any.cpp
	PlatformHandler_Any.h
	PlatformHandler_GamePC.cpp
	PlatformHandler_GamePC.h
	Platform_Common/PlatformHandlerBase.cpp
	Platform_Common/PlatformHandlerBase.h
)
source_group("Source\\Platforms" FILES ${SourceGroup_Source_Platforms})


# Support unity build with uber files
set(NoUberFile ${SourceGroup_Root} ${SourceGroup_Source} ${SourceGroup_Source_Commands} ${SourceGroup_Source_Platforms}  )


set (SOURCES
	${NoUberFile}
)
#END-FILE-LIST

include_directories( ${CMAKE_CURRENT_SOURCE_DIR} )
include_directories( ${CMAKE_CURRENT_SOURCE_DIR}/../CryAction )

add_library( ${THIS_PROJECT} ${SOURCES} )

if (DEFINED DURANGO OR DEFINED WIN32)
	target_link_libraries( ${THIS_PROJECT} Ws2_32 )
endif()


USE_MSVC_PRECOMPILED_HEADER( ${THIS_PROJECT} "StdAfx.h" "StdAfx.cpp" )

SET_PLATFORM_TARGET_PROPERTIES( ${THIS_PROJECT} )
